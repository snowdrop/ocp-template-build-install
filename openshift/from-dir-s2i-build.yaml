apiVersion: v1
kind: Template
metadata:
  name: spring-boot-rest-http
  annotations:
    iconClass: icon-spring
    tags: spring-boot, rest, java, microservice
    openshift.io/display-name: Spring Boot - REST Http Endpoint
    openshift.io/provider-display-name: "Red Hat, Inc."
    openshift.io/documentation-url: "https://appdev.prod-preview.openshift.io/docs/spring-boot-runtime.html#mission-http-api-spring-boot-tomcat"
    description: >-
      The REST API Level 0 Mission provides a basic example of mapping business operations to a remote procedure call endpoint over HTTP using a REST framework.
parameters:
- name: SOURCE_REPOSITORY_DIR
  description: The location within the source repo of the application
  displayName: Source Directory
  value: .
  required: true
- name: ARTIFACT_COPY_ARGS
  description: Syntax to be used to copy uberjar files to the target directory
  displayName: Copy Args
  value: '*-exec.jar'
  required: true
- name: GITHUB_WEBHOOK_SECRET
  description: A secret string used to configure the GitHub webhook.
  displayName: GitHub Webhook Secret
  required: true
  from: '[a-zA-Z0-9]{40}'
  generate: expression
- name: MAVEN_MIRROR_URL
  description: Maven Nexus Repository to be used during build phase
  displayName:
  required: false
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: 10977452-snowdrop-pull-secret
  data:
    .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5yZWRoYXQuaW8iOnsiYXV0aCI6Ik1UQTVOemMwTlRKOGMyNXZkMlJ5YjNBNlpYbEthR0pIWTJsUGFVcFRWWHBWZUUxcFNqa3VaWGxLZW1SWFNXbFBhVWt5V1ZkV2JGcFVRbWhPVjAwMFQwUkZNRTR5Um14WlZFbDZUV3BKTlUxVVJUTk9SR2hwVFcxRmVVMXBTamt1YVVVMllVbGZPRGhDV1MxVVFWZG9lazAzTkVzMVkyTkNNVUpwVGtGM2JGTmFZVmxUUlZsa2FtZHlNVlozWlU1NFVFeFZOVGhGV1dZMVduZzBObVJXWVZZdFEzSkxOM2Q2ZUVsaU5IUllWa05MUTBScVdVWXpNVVF3Y0hkM2FsRTBUbkJRZUROSkxUWldMVTlNVG5aM1luRTRRMmhaVVhoSFdFNVpjVkYxVlhsM01FUnFVR3RUZURRM1gyNTJUa3RMY1ZOTGJuSjJOUzExZEZKNWNXeFdWMGxXUVRGZloxcGpZMVJCVTJsRFlUaGxXalZ2YjFaWmJqZHZUbDh0YW1ZNGFHNWhkbGs1UmtGRk9GZElkMHBRTTJNNVpXTnRlQzB4UWt4eGVVMXhWVzFuVjFoTE9XRldhRUZKVm5kalJteHhVVWhaTTNSbk1ESkZiME5WYm14MVZESmhhbk5CUms1U1pIcGxkbFpMT1ZKTlluaEtVV0pwVVVSSWNYRm9VRWRCT0dkR1dETkpTRTUzU21oaGJYUkZVRUZMYlhkWVgxcEZWWEpTV2pCM05IZzJYMHRWTmpoQ01FWjFaV0ZNY0VsSWFWOXlPVVJ2WWpKWFRqSnZSbGMzVkdGalptRkNSSHBZVW5kak4xQjNRbWcxTldWalRWQXdTbWd0WjBOT1luaEhkWFkyVFZGMlUxbzRWR3BVVGxCNlNuTnphSGhEYUdsb1NHc3ljVFJwWkdWT1VFOU5Obmw1YmpSd1YxTlZTek5CWW5aVWFFZE9abVJFTkhCT1dYQnZUbkZVYzE4elNraEZWMWh6TUVwb1VHRjFkbWhhTWpsclIwRnRNek51U201RmFETjFaV3RKYVZCbVdWQkVSMUIyWTFKaWNEVTVlazVSVERBMWIzVjNVRmQ1UlU1Rk16QTBlbkEyYUZKTExXZE9TMk5FUVU5U1dtUkNTSFV3ZUVsSlNVZHBYMVpWYUc1UVpWWndOMkpIUkhBemEyVXpWRkpSWW14RWRrRkdTbkZVU25kUGJVdE9kbEp0YUVSS2JESTBWRFZHVjBoc2QyZFdUa051Wm5vMGFsRTJka1Y2YTNKWVZHZGlXbkZtVjNKSFF6VkhUMVV0UkVwaFNFTnVTek5QU1RkbloxVlJjRzFtT1c5QlRrWmpUMlozYlRkNlRYVnhiMEp3WWkxSWRuRlNiMGN6YmxKT1JtSTVWRzg9In19fQ==
  type: kubernetes.io/dockerconfigjson
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: spring-boot-rest-http
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: runtime
  spec:
    tags:
    - name: "latest"
      from:
        kind: DockerImage
        name: registry.redhat.io/openjdk/openjdk-11-rhel8
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: spring-boot-rest-http
    name: spring-boot-rest-http
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: 'spring-boot-rest-http:2.1.3-1'
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: 'runtime:latest'
        pullSecret:
          name: 10977452-snowdrop-pull-secret
        incremental: true
        env:
        - name: MAVEN_ARGS_APPEND
          value: "-pl ${SOURCE_REPOSITORY_DIR}"
        - name: ARTIFACT_DIR
          value: "${SOURCE_REPOSITORY_DIR}/target"
        - name: MAVEN_MIRROR_URL
          value: "${MAVEN_MIRROR_URL}"
        - name: ARTIFACT_COPY_ARGS
          value: "${ARTIFACT_COPY_ARGS}"
      type: Source
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: spring-boot-rest-http
      provider: snowdrop
      version: "2.1.3-1"
      group: io.openshift.booster
    name: spring-boot-rest-http
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: spring-boot-rest-http
      provider: snowdrop
      group: io.openshift.booster
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: spring-boot-rest-http
      provider: snowdrop
      version: "2.1.3-1"
      group: io.openshift.booster
    name: spring-boot-rest-http
  spec:
    replicas: 1
    selector:
      app: spring-boot-rest-http
      provider: snowdrop
      group: io.openshift.booster
    strategy:
      rollingParams:
        timeoutSeconds: 3600
      type: Rolling
    template:
      metadata:
        labels:
          app: spring-boot-rest-http
          provider: snowdrop
          version: "2.1.3-1"
          group: io.openshift.booster
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: spring-boot-rest-http:2.1.3-1
          imagePullPolicy: IfNotPresent
          name: spring-boot
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
          securityContext:
            privileged: false
        imagePullSecrets:
          - name: 10977452-snowdrop-pull-secret
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - spring-boot
        from:
          kind: ImageStreamTag
          name: spring-boot-rest-http:2.1.3-1
      type: ImageChange
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: spring-boot-rest-http
      provider: snowdrop
      version: "2.1.3-1"
      group: io.openshift.booster
    name: spring-boot-rest-http
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: spring-boot-rest-http