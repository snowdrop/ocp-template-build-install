apiVersion: v1
kind: Template
metadata:
  name: spring-boot-rest-http
  annotations:
    iconClass: icon-spring
    tags: spring-boot, rest, java, microservice
    openshift.io/display-name: Spring Boot - REST Http Endpoint
    openshift.io/provider-display-name: "Red Hat, Inc."
    openshift.io/documentation-url: "https://appdev.prod-preview.openshift.io/docs/spring-boot-runtime.html#mission-http-api-spring-boot-tomcat"
    description: >-
      The REST API Level 0 Mission provides a basic example of mapping business operations to a remote procedure call endpoint over HTTP using a REST framework.
parameters:
- name: NAMESPACE
  description: User's namespace
  displayName: User's namespace
  value: demo
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: spring-boot-rest-http
      provider: snowdrop
      version: "1.5"
      group: io.openshift.booster
    name: spring-boot-rest-http
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: spring-boot-rest-http
      provider: snowdrop
      group: io.openshift.booster
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: spring-boot-rest-http
      provider: snowdrop
      version: "1.5"
      group: io.openshift.booster
    name: spring-boot-rest-http
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: spring-boot-rest-http
        provider: snowdrop
        group: io.openshift.booster
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: spring-boot-rest-http
          provider: snowdrop
          version: "1.5"
          group: io.openshift.booster
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: quay.io/snowdrop/spring-boot-example
          imagePullPolicy: IfNotPresent
          name: spring-boot
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            livenessProbe:
              httpGet:
                path: /actuator/health
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 180
          securityContext:
            privileged: false
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: spring-boot-rest-http
      provider: snowdrop
      version: "1.5"
      group: io.openshift.booster
    name: spring-boot-rest-http
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: spring-boot-rest-http